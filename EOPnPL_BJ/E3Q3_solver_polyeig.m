function [s1,s2,s3] = E3Q3_solver_polyeig(C)
%  C * [a1^2, a1*a2, a1*a3, a1, a2^2, a2*a3, a2, a3^2, a3, 1]' = 0

M = [C(:,5),C(:,8),C(:,6)];
N2 = zeros(3,3);
N2(:,3) = -C(:,1);
N1 = -[C(:,2),C(:,3),C(:,4)];
N0 = -[C(:,7),C(:,9),C(:,10)];
T2 = pinv(M)*N2;  T1 = pinv(M)*N1;  T0 = pinv(M)*N0; 
T2_1_3 = T2(1,3);  T2_2_3 = T2(2,3);  T2_3_3 = T2(3,3);  

T1_1_1 = T1(1,1);  T1_1_2 = T1(1,2);  T1_1_3 = T1(1,3);
T1_2_1 = T1(2,1);  T1_2_2 = T1(2,2);  T1_2_3 = T1(2,3);
T1_3_1 = T1(3,1);  T1_3_2 = T1(3,2);  T1_3_3 = T1(3,3);

T0_1_1 = T0(1,1);  T0_1_2 = T0(1,2);  T0_1_3 = T0(1,3);
T0_2_1 = T0(2,1);  T0_2_2 = T0(2,2);  T0_2_3 = T0(2,3);
T0_3_1 = T0(3,1);  T0_3_2 = T0(3,2);  T0_3_3 = T0(3,3);

C4 = zeros(3,3);  C3 = zeros(3,3);
C4(3,3) = T2_3_3^2 + (2*T1_3_1*T1_3_2 - T1_1_2*T1_2_1 - T1_1_1*T1_2_2)*T2_3_3 - T2_1_3*T2_2_3 - T2_1_3*(T1_1_1*T1_2_1 - T1_3_1^2) - T2_2_3*(T1_1_2*T1_2_2 - T1_3_2^2);
C3(1,3) = T1_3_1*T2_1_3 - T1_1_2*T2_2_3 - T2_3_3*(T1_1_1 - T1_3_2);
C3(2,3) = T1_3_2*T2_2_3 - T1_2_1*T2_1_3 - T2_3_3*(T1_2_2 - T1_3_1);
C3(3,:) = [2*T1_3_1*T2_3_3 - T1_2_1*T2_1_3 - T1_1_1*T2_2_3 - T1_3_1*(T1_1_1*T1_2_2 + T1_1_2*T1_2_1 - 2*T1_3_1*T1_3_2) - T1_1_1*(- T1_3_1^2 + T1_1_1*T1_2_1) - T1_2_1*(- T1_3_2^2 + T1_1_2*T1_2_2), 2*T1_3_2*T2_3_3 - T1_2_2*T2_1_3 - T1_1_2*T2_2_3 - T1_3_2*(T1_1_1*T1_2_2 + T1_1_2*T1_2_1 - 2*T1_3_1*T1_3_2) - T1_1_2*(- T1_3_1^2 + T1_1_1*T1_2_1) - T1_2_2*(- T1_3_2^2 + T1_1_2*T1_2_2), 2*T1_3_3*T2_3_3 - T1_2_3*T2_1_3 - T1_1_3*T2_2_3 - T2_1_3*(T0_1_1*T1_2_1 + T0_2_1*T1_1_1 - 2*T0_3_1*T1_3_1) - T2_2_3*(T0_1_2*T1_2_2 + T0_2_2*T1_1_2 - 2*T0_3_2*T1_3_2) - T1_3_3*(T1_1_1*T1_2_2 + T1_1_2*T1_2_1 - 2*T1_3_1*T1_3_2) - T1_1_3*(- T1_3_1^2 + T1_1_1*T1_2_1) - T1_2_3*(- T1_3_2^2 + T1_1_2*T1_2_2) - T2_3_3*(T0_1_1*T1_2_2 + T0_1_2*T1_2_1 + T0_2_1*T1_1_2 + T0_2_2*T1_1_1 - 2*T0_3_1*T1_3_2 - 2*T0_3_2*T1_3_1)];

C2 = [...
                                                                                                                                                                                                                                                                                                                                                                                                          T2_3_3 - T1_1_2*T1_2_1 + T1_1_1*T1_3_1 - T1_3_1*(T1_1_1 - T1_3_2),                                                                                                                                                                                                                                                                                                                                                                                                           T1_1_2*T1_3_1 - T1_1_2*T1_2_2 - T2_1_3 - T1_3_2*(T1_1_1 - T1_3_2),                                                                                                                                                                                                                                                                                                                                                                                                                                                                 T0_3_1*T2_1_3 - T1_1_2*T1_2_3 - T0_1_2*T2_2_3 + T1_1_3*T1_3_1 - T2_3_3*(T0_1_1 - T0_3_2) - T1_3_3*(T1_1_1 - T1_3_2);
                                                                                                                                                                                                                                                                                                                                                                                                          T1_2_1*T1_3_2 - T1_1_1*T1_2_1 - T2_2_3 - T1_3_1*(T1_2_2 - T1_3_1),                                                                                                                                                                                                                                                                                                                                                                                                           T2_3_3 - T1_1_2*T1_2_1 + T1_2_2*T1_3_2 - T1_3_2*(T1_2_2 - T1_3_1),                                                                                                                                                                                                                                                                                                                                                                                                                                                                 T0_3_2*T2_2_3 - T1_1_3*T1_2_1 - T0_2_1*T2_1_3 + T1_2_3*T1_3_2 - T2_3_3*(T0_2_2 - T0_3_1) - T1_3_3*(T1_2_2 - T1_3_1);
2*T0_3_1*T2_3_3 - T0_2_1*T2_1_3 - T1_1_1*T1_2_3 - T1_1_3*T1_2_1 - T0_1_1*T2_2_3 + 2*T1_3_1*T1_3_3 - T1_1_1*(T0_1_1*T1_2_1 + T0_2_1*T1_1_1 - 2*T0_3_1*T1_3_1) - T1_2_1*(T0_1_2*T1_2_2 + T0_2_2*T1_1_2 - 2*T0_3_2*T1_3_2) - T0_3_1*(T1_1_1*T1_2_2 + T1_1_2*T1_2_1 - 2*T1_3_1*T1_3_2) - T0_1_1*(- T1_3_1^2 + T1_1_1*T1_2_1) - T0_2_1*(- T1_3_2^2 + T1_1_2*T1_2_2) - T1_3_1*(T0_1_1*T1_2_2 + T0_1_2*T1_2_1 + T0_2_1*T1_1_2 + T0_2_2*T1_1_1 - 2*T0_3_1*T1_3_2 - 2*T0_3_2*T1_3_1), 2*T0_3_2*T2_3_3 - T0_2_2*T2_1_3 - T1_1_2*T1_2_3 - T1_1_3*T1_2_2 - T0_1_2*T2_2_3 + 2*T1_3_2*T1_3_3 - T1_1_2*(T0_1_1*T1_2_1 + T0_2_1*T1_1_1 - 2*T0_3_1*T1_3_1) - T1_2_2*(T0_1_2*T1_2_2 + T0_2_2*T1_1_2 - 2*T0_3_2*T1_3_2) - T0_3_2*(T1_1_1*T1_2_2 + T1_1_2*T1_2_1 - 2*T1_3_1*T1_3_2) - T0_1_2*(- T1_3_1^2 + T1_1_1*T1_2_1) - T0_2_2*(- T1_3_2^2 + T1_1_2*T1_2_2) - T1_3_2*(T0_1_1*T1_2_2 + T0_1_2*T1_2_1 + T0_2_1*T1_1_2 + T0_2_2*T1_1_1 - 2*T0_3_1*T1_3_2 - 2*T0_3_2*T1_3_1), T1_3_3^2 + (2*T0_3_1*T1_3_2 - T0_1_2*T1_2_1 - T0_2_1*T1_1_2 - T0_2_2*T1_1_1 - T0_1_1*T1_2_2 + 2*T0_3_2*T1_3_1)*T1_3_3 - T0_1_3*T2_2_3 - T0_2_3*T2_1_3 - T1_1_3*T1_2_3 + 2*T0_3_3*T2_3_3 - T2_3_3*(T0_1_1*T0_2_2 + T0_1_2*T0_2_1 - 2*T0_3_1*T0_3_2) - T1_1_3*(T0_1_1*T1_2_1 + T0_2_1*T1_1_1 - 2*T0_3_1*T1_3_1) - T1_2_3*(T0_1_2*T1_2_2 + T0_2_2*T1_1_2 - 2*T0_3_2*T1_3_2) - T0_3_3*(T1_1_1*T1_2_2 + T1_1_2*T1_2_1 - 2*T1_3_1*T1_3_2) - T2_1_3*(T0_1_1*T0_2_1 - T0_3_1^2) - T2_2_3*(T0_1_2*T0_2_2 - T0_3_2^2) - T0_1_3*(T1_1_1*T1_2_1 - T1_3_1^2) - T0_2_3*(T1_1_2*T1_2_2 - T1_3_2^2)
];

C1 = [...
                                                                                                                                                                                                                                                                                                                                               T1_3_3 - T0_1_2*T1_2_1 - T0_2_1*T1_1_2 + T0_1_1*T1_3_1 + T0_3_1*T1_1_1 - T1_3_1*(T0_1_1 - T0_3_2) - T0_3_1*(T1_1_1 - T1_3_2),                                                                                                                                                                                                                                                                                                                                                T0_1_2*T1_3_1 - T0_1_2*T1_2_2 - T0_2_2*T1_1_2 - T1_1_3 + T0_3_1*T1_1_2 - T1_3_2*(T0_1_1 - T0_3_2) - T0_3_2*(T1_1_1 - T1_3_2),                                                                                                                                                                                                                                                                                                       T0_1_3*T1_3_1 - T0_2_3*T1_1_2 - T0_1_2*T1_2_3 + T0_3_1*T1_1_3 - T1_3_3*(T0_1_1 - T0_3_2) - T0_3_3*(T1_1_1 - T1_3_2);
                                                                                                                                                                                                                                                                                                                                               T0_2_1*T1_3_2 - T0_1_1*T1_2_1 - T0_2_1*T1_1_1 - T1_2_3 + T0_3_2*T1_2_1 - T1_3_1*(T0_2_2 - T0_3_1) - T0_3_1*(T1_2_2 - T1_3_1),                                                                                                                                                                                                                                                                                                                                                T1_3_3 - T0_1_2*T1_2_1 - T0_2_1*T1_1_2 + T0_2_2*T1_3_2 + T0_3_2*T1_2_2 - T1_3_2*(T0_2_2 - T0_3_1) - T0_3_2*(T1_2_2 - T1_3_1),                                                                                                                                                                                                                                                                                                       T0_2_3*T1_3_2 - T0_2_1*T1_1_3 - T0_1_3*T1_2_1 + T0_3_2*T1_2_3 - T1_3_3*(T0_2_2 - T0_3_1) - T0_3_3*(T1_2_2 - T1_3_1);
2*T0_3_1*T1_3_3 - T0_1_3*T1_2_1 - T0_2_1*T1_1_3 - T0_2_3*T1_1_1 - T0_1_1*T1_2_3 + 2*T0_3_3*T1_3_1 - T1_3_1*(T0_1_1*T0_2_2 + T0_1_2*T0_2_1 - 2*T0_3_1*T0_3_2) - T0_1_1*(T0_1_1*T1_2_1 + T0_2_1*T1_1_1 - 2*T0_3_1*T1_3_1) - T0_2_1*(T0_1_2*T1_2_2 + T0_2_2*T1_1_2 - 2*T0_3_2*T1_3_2) - T1_1_1*(- T0_3_1^2 + T0_1_1*T0_2_1) - T1_2_1*(- T0_3_2^2 + T0_1_2*T0_2_2) - T0_3_1*(T0_1_1*T1_2_2 + T0_1_2*T1_2_1 + T0_2_1*T1_1_2 + T0_2_2*T1_1_1 - 2*T0_3_1*T1_3_2 - 2*T0_3_2*T1_3_1), 2*T0_3_2*T1_3_3 - T0_1_3*T1_2_2 - T0_2_2*T1_1_3 - T0_2_3*T1_1_2 - T0_1_2*T1_2_3 + 2*T0_3_3*T1_3_2 - T1_3_2*(T0_1_1*T0_2_2 + T0_1_2*T0_2_1 - 2*T0_3_1*T0_3_2) - T0_1_2*(T0_1_1*T1_2_1 + T0_2_1*T1_1_1 - 2*T0_3_1*T1_3_1) - T0_2_2*(T0_1_2*T1_2_2 + T0_2_2*T1_1_2 - 2*T0_3_2*T1_3_2) - T1_1_2*(- T0_3_1^2 + T0_1_1*T0_2_1) - T1_2_2*(- T0_3_2^2 + T0_1_2*T0_2_2) - T0_3_2*(T0_1_1*T1_2_2 + T0_1_2*T1_2_1 + T0_2_1*T1_1_2 + T0_2_2*T1_1_1 - 2*T0_3_1*T1_3_2 - 2*T0_3_2*T1_3_1), 2*T0_3_3*T1_3_3 - T0_2_3*T1_1_3 - T0_1_3*T1_2_3 - T1_3_3*(T0_1_1*T0_2_2 + T0_1_2*T0_2_1 - 2*T0_3_1*T0_3_2) - T0_1_3*(T0_1_1*T1_2_1 + T0_2_1*T1_1_1 - 2*T0_3_1*T1_3_1) - T0_2_3*(T0_1_2*T1_2_2 + T0_2_2*T1_1_2 - 2*T0_3_2*T1_3_2) - T1_1_3*(- T0_3_1^2 + T0_1_1*T0_2_1) - T1_2_3*(- T0_3_2^2 + T0_1_2*T0_2_2) - T0_3_3*(T0_1_1*T1_2_2 + T0_1_2*T1_2_1 + T0_2_1*T1_1_2 + T0_2_2*T1_1_1 - 2*T0_3_1*T1_3_2 - 2*T0_3_2*T1_3_1)
];

C0 = [...
                                                                                                                     T0_3_3 - T0_1_2*T0_2_1 + T0_1_1*T0_3_1 - T0_3_1*(T0_1_1 - T0_3_2),                                                                                                                      T0_1_2*T0_3_1 - T0_1_2*T0_2_2 - T0_1_3 - T0_3_2*(T0_1_1 - T0_3_2),                                                                                                    T0_1_3*T0_3_1 - T0_1_2*T0_2_3 - T0_3_3*(T0_1_1 - T0_3_2);
                                                                                                                     T0_2_1*T0_3_2 - T0_1_1*T0_2_1 - T0_2_3 - T0_3_1*(T0_2_2 - T0_3_1),                                                                                                                      T0_3_3 - T0_1_2*T0_2_1 + T0_2_2*T0_3_2 - T0_3_2*(T0_2_2 - T0_3_1),                                                                                                    T0_2_3*T0_3_2 - T0_1_3*T0_2_1 - T0_3_3*(T0_2_2 - T0_3_1);
2*T0_3_1*T0_3_3 - T0_1_3*T0_2_1 - T0_1_1*T0_2_3 - T0_3_1*(T0_1_1*T0_2_2 + T0_1_2*T0_2_1 - 2*T0_3_1*T0_3_2) - T0_1_1*(- T0_3_1^2 + T0_1_1*T0_2_1) - T0_2_1*(- T0_3_2^2 + T0_1_2*T0_2_2), 2*T0_3_2*T0_3_3 - T0_1_3*T0_2_2 - T0_1_2*T0_2_3 - T0_3_2*(T0_1_1*T0_2_2 + T0_1_2*T0_2_1 - 2*T0_3_1*T0_3_2) - T0_1_2*(- T0_3_1^2 + T0_1_1*T0_2_1) - T0_2_2*(- T0_3_2^2 + T0_1_2*T0_2_2), T0_3_3^2 + (2*T0_3_1*T0_3_2 - T0_1_2*T0_2_1 - T0_1_1*T0_2_2)*T0_3_3 - T0_1_3*T0_2_3 - T0_1_3*(T0_1_1*T0_2_1 - T0_3_1^2) - T0_2_3*(T0_1_2*T0_2_2 - T0_3_2^2)
];

[sols_v,s1] = polyeig(C0,C1,C2,C3,C4);
s2 = (sols_v(1,:)./sols_v(3,:))';
s3 = (sols_v(2,:)./sols_v(3,:))';
end

