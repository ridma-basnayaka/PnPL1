function [P1w_hat,P1c_hat] = EOPnPL_BJ_find_P1w_hat(R0,t0,xs,xe,Xs,Xe,nlines)

P1c = R0*Xs + repmat(t0,1,nlines);  P2c = R0*Xe + repmat(t0,1,nlines);
Vc = R0*(Xe - Xs); % 模型直线方向向量
P1c = [P1c P2c];  p1 = [xs,xe];  Vc = [Vc Vc];% 两图像端点一起运算
a1 = -(P1c(1,:).*Vc(1,:) + P1c(2,:).*Vc(2,:) - P1c(1,:).*Vc(3,:).*p1(1,:) - P1c(3,:).*Vc(1,:).*p1(1,:) - P1c(2,:).*Vc(3,:).*p1(2,:) - P1c(3,:).*Vc(2,:).*p1(2,:) + P1c(1,:).*Vc(1,:).*p1(2,:).^2 + P1c(2,:).*Vc(2,:).*p1(1,:).^2 + P1c(3,:).*Vc(3,:).*p1(1,:).^2 + P1c(3,:).*Vc(3,:).*p1(2,:).^2 - P1c(1,:).*Vc(2,:).*p1(1,:).*p1(2,:) - P1c(2,:).*Vc(1,:).*p1(1,:).*p1(2,:))./(Vc(1,:).^2.*p1(2,:).^2 + Vc(1,:).^2 - 2.*Vc(1,:).*Vc(2,:).*p1(1,:).*p1(2,:) - 2.*Vc(1,:).*Vc(3,:).*p1(1,:) + Vc(2,:).^2.*p1(1,:).^2 + Vc(2,:).^2 - 2.*Vc(2,:).*Vc(3,:).*p1(2,:) + Vc(3,:).^2.*p1(1,:).^2 + Vc(3,:).^2.*p1(2,:).^2);
P1c_hat = P1c + a1.*Vc;
P1w_hat = R0\(P1c_hat - repmat(t0,1,2*nlines));

% % 模型直线与图像端点投影线间最近的距离
% a3 = (P1c(3,:).*Vc(1,:).^2 + P1c(3,:).*Vc(2,:).^2 - P1c(1,:).*Vc(1,:).*Vc(3,:) - P1c(2,:).*Vc(2,:).*Vc(3,:) + P1c(1,:).*Vc(2,:).^2.*p1(1,:) + P1c(1,:).*Vc(3,:).^2.*p1(1,:) + P1c(2,:).*Vc(1,:).^2.*p1(2,:) + P1c(2,:).*Vc(3,:).^2.*p1(2,:) - P1c(1,:).*Vc(1,:).*Vc(2,:).*p1(2,:) - P1c(2,:).*Vc(1,:).*Vc(2,:).*p1(1,:) - P1c(3,:).*Vc(1,:).*Vc(3,:).*p1(1,:) - P1c(3,:).*Vc(2,:).*Vc(3,:).*p1(2,:))./(Vc(1,:).^2.*p1(2,:).^2 + Vc(1,:).^2 - 2.*Vc(1,:).*Vc(2,:).*p1(1,:).*p1(2,:) - 2.*Vc(1,:).*Vc(3,:).*p1(1,:) + Vc(2,:).^2.*p1(1,:).^2 + Vc(2,:).^2 - 2.*Vc(2,:).*Vc(3,:).*p1(2,:) + Vc(3,:).^2.*p1(1,:).^2 + Vc(3,:).^2.*p1(2,:).^2);
% err = P1c_hat - a3.*[p1;ones(1,2*nlines)];
% err = sum(err.^2);
end

